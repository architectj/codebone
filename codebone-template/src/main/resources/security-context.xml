<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd">

	<http auto-config="true" use-expressions="true">
		<intercept-url pattern="/admin/auth/login" access="permitAll" />
		<intercept-url pattern="/admin/**" access="hasRole('ROLE_USER')" />
		<logout invalidate-session="true" logout-url="/admin/auth/logout"
			logout-success-url="/" />
		<form-login login-page="/admin/auth/login"
			username-parameter="username" password-parameter="password"
			login-processing-url="/admin/authentication" />
	</http>

	<authentication-manager>
		<authentication-provider user-service-ref="securityService">
			<password-encoder ref="passwordEncoder" />
		</authentication-provider>
	</authentication-manager>
	
	<bean id="passwordEncoder" class="org.acegisecurity.providers.encoding.Md5PasswordEncoder" />

	<beans:bean id="securityService" class="org.codebone.security.authentication.AuthenticationDao">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="usersByUsernameQuery">
			<beans:value>
				SELECT idx, password, enabled
				FROM managermodel
				WHERE id = ?
			</beans:value>
		</beans:property>
		<beans:property name="authoritiesByUsernameQuery">
			<beans:value>
				SELECT auth.groupIdx, auth.authority
				FROM authoritiesmodel as auth, managermodel as manager
				WHERE manager.idx = ?
				and manager.groupIdx = auth.groupIdx
			</beans:value>
		</beans:property>
	</beans:bean>
</beans:beans>
