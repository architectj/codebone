<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd">

	<http auto-config="true" use-expressions="true">
		<intercept-url pattern="/app/auth/login" access="permitAll" />
		<intercept-url pattern="/app/**" access="hasRole('ROLE_USER')" />
		<logout invalidate-session="true" logout-url="/app/auth/logout"
			logout-success-url="/" />
		<form-login login-page="/app/auth/login"
			username-parameter="username" password-parameter="password"
			login-processing-url="/app/authentication" />
	</http>

	<authentication-manager>
		<authentication-provider user-service-ref="securityService">
			<password-encoder ref="passwordEncoder" />
		</authentication-provider>
	</authentication-manager>

	<beans:bean id="securityService"
		class="org.codebone.security.authentication.AuthenticationDao">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="usersByUsernameQuery">
			<beans:value>
				SELECT idx, password, enabled
				FROM managermodel
				WHERE id =
				?
			</beans:value>
		</beans:property>
		<beans:property name="authoritiesByUsernameQuery">
			<beans:value>
				SELECT auth.groupIdx, auth.authority
				FROM
				authoritiesmodel as auth, managermodel as manager
				WHERE manager.idx =
				?
				and manager.groupIdx = auth.groupIdx
			</beans:value>
		</beans:property>
	</beans:bean>
	<beans:bean id="passwordEncoder"
		class="org.springframework.security.authentication.encoding.Md5PasswordEncoder">
	</beans:bean>

	<beans:bean id="accessDecisionManager"
		class="org.springframework.security.access.vote.AffirmativeBased">
		<beans:property name="decisionVoters">
			<beans:list>
				<beans:ref bean="roleHierarchyVoter" />
			</beans:list>
		</beans:property>
	</beans:bean>

	<beans:bean id="roleHierarchyVoter"
		class="org.springframework.security.access.vote.RoleHierarchyVoter">
		<beans:constructor-arg ref="roleHierarchy" />
	</beans:bean>

	<beans:bean id="roleHierarchy"
		class="org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl">
		<beans:property name="hierarchy">
			<beans:value>
				ROLE_ADMIN > ROLE_MANAGER_ADMIN
				ROLE_MANAGER_ADMIN > ROLE_MANAGER_CREATE
				ROLE_MANAGER_ADMIN > ROLE_MANAGER_READ
				ROLE_MANAGER_ADMIN > ROLE_MANAGER_UPDATE
				ROLE_MANAGER_ADMIN > ROLE_MANAGER_DELETE
				
				ROLE_ADMIN > ROLE_GROUP_ADMIN
				ROLE_GROUP_ADMIN > ROLE_GROUP_CREATE
				ROLE_GROUP_ADMIN > ROLE_GROUP_READ
				ROLE_GROUP_ADMIN > ROLE_GROUP_UPDATE
				ROLE_GROUP_ADMIN > ROLE_GROUP_DELETE
				
				ROLE_ADMIN > ROLE_MENU_ADMIN
				ROLE_MENU_ADMIN > ROLE_MENU_CREATE
				ROLE_MENU_ADMIN > ROLE_MENU_READ
				ROLE_MENU_ADMIN > ROLE_MENU_UPDATE
				ROLE_MENU_ADMIN > ROLE_MENU_DELETE
			</beans:value>
		</beans:property>
	</beans:bean>
</beans:beans>
